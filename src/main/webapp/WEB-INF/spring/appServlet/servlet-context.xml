<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:security="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xs"

	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/assets/**" location="/resources/" />
	<!-- <mvc:resources mapping="/assets/**" location="/resources/"/> -->

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<interceptors>
		<interceptor>
			<mapping path="/**" />
			<beans:bean class="com.journaldev.spring.Interceptor"></beans:bean>
		</interceptor>
	</interceptors>
	
	<beans:bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<beans:property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<beans:property name="url" value="jdbc:mysql://localhost:3306/test" />
		<beans:property name="username" value="root" />
		<beans:property name="password" value="admin" />
	</beans:bean>

	<!-- Hibernate 4 SessionFactory Bean definition -->
	<beans:bean id="hibernate4AnnotatedSessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<beans:property name="dataSource" ref="dataSource" />
		<beans:property name="annotatedClasses">
			<beans:list>
				<beans:value>com.journaldev.spring.model.Question</beans:value>
				<beans:value>com.journaldev.spring.model.QuestionPool</beans:value>
				<beans:value>com.journaldev.spring.model.Course</beans:value>
				<beans:value>com.journaldev.spring.model.Exam</beans:value>
				<beans:value>com.journaldev.spring.model.User</beans:value>
				<beans:value>com.journaldev.spring.model.Result</beans:value>
				<beans:value>com.journaldev.spring.model.QuestionProp</beans:value>
			</beans:list>
		</beans:property>
		<beans:property name="hibernateProperties">
			<beans:props>
				<beans:prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect
				</beans:prop>
				<beans:prop key="hibernate.show_sql">true</beans:prop>
				<beans:prop key="format_sql">true</beans:prop>
				<beans:prop key="use_sql_comments">true</beans:prop>
				<beans:prop key="hibernate.hbm2ddl.auto">update</beans:prop>
				<beans:prop key="hibernate.enable_lazy_load_no_trans">true</beans:prop>

			</beans:props>
		</beans:property>
	</beans:bean>

	<beans:bean id="questionDAO" class="com.journaldev.spring.dao.QuestionDAOImpl">
		<beans:property name="sessionFactory"
			ref="hibernate4AnnotatedSessionFactory" />
	</beans:bean>
	<beans:bean id="questionService"
		class="com.journaldev.spring.service.QuestionServiceImpl">
		<beans:property name="questionDAO" ref="questionDAO"></beans:property>
	</beans:bean>
    
    <beans:bean id="questionPoolDAO" class="com.journaldev.spring.dao.QuestionPoolDAOImpl">
		<beans:property name="sessionFactory"
			ref="hibernate4AnnotatedSessionFactory" />
	</beans:bean>
	
	<beans:bean id="questionPoolService"
		class="com.journaldev.spring.service.QuestionPoolServiceImpl">
		<beans:property name="questionPoolDAO" ref="questionPoolDAO"></beans:property>
		<beans:property name="questionDAO" ref="questionDAO"></beans:property>
	</beans:bean>
    
	<beans:bean id="courseDAO" class="com.journaldev.spring.dao.CourseDAOImpl">
		<beans:property name="sessionFactory"
			ref="hibernate4AnnotatedSessionFactory" />
	</beans:bean>
	<beans:bean id="courseService"
		class="com.journaldev.spring.service.CourseServiceImpl">
		<beans:property name="courseDAO" ref="courseDAO"></beans:property>
		<beans:property name="userDAO" ref="userDAO"></beans:property>
		<beans:property name="examDAO" ref="examDAO"></beans:property>
	</beans:bean>

	<beans:bean id="userDAO" class="com.journaldev.spring.dao.UserDAOImpl">
		<beans:property name="sessionFactory"
			ref="hibernate4AnnotatedSessionFactory" />
	</beans:bean>
	<beans:bean id="userService"
		class="com.journaldev.spring.service.UserServiceImpl">
		<beans:property name="userDAO" ref="userDAO"></beans:property>
	</beans:bean>
	<beans:bean id="loginDAO" class="com.journaldev.spring.dao.LoginDAOImpl">
		<beans:property name="sessionFactory"
			ref="hibernate4AnnotatedSessionFactory" />
	</beans:bean>
	<beans:bean id="loginService"
		class="com.journaldev.spring.service.LoginServiceImpl">
		<beans:property name="loginDAO" ref="loginDAO"></beans:property>
	</beans:bean>
	<beans:bean id="examDAO" class="com.journaldev.spring.dao.ExamDAOImpl">
		<beans:property name="sessionFactory"
			ref="hibernate4AnnotatedSessionFactory" />
	</beans:bean>
	<beans:bean id="examService"
		class="com.journaldev.spring.service.ExamServiceImpl">
		<beans:property name="examDAO" ref="examDAO"></beans:property>
		<beans:property name="resultDAO" ref="resultDAO"></beans:property>
		<beans:property name="questionDAO" ref="questionDAO"></beans:property>
	</beans:bean>
	<beans:bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">

		<!-- setting maximum upload size -->
		<beans:property name="maxUploadSize" value="1000000" />
	</beans:bean>

	<beans:bean id="resultDAO" class="com.journaldev.spring.dao.ResultDAOImpl">
		<beans:property name="sessionFactory"
			ref="hibernate4AnnotatedSessionFactory" />
	</beans:bean>

	<beans:bean id="resultService"
		class="com.journaldev.spring.service.ResultServiceImpl">
		<beans:property name="resultDAO" ref="resultDAO"></beans:property>
		<beans:property name="questionDAO" ref="questionDAO"></beans:property>
	</beans:bean>
	
	<beans:bean id="reportService"
		class="com.journaldev.spring.service.ReportServiceImpl">
		<beans:property name="resultDAO" ref="resultDAO"></beans:property>
		<beans:property name="questionDAO" ref="questionDAO"></beans:property>
	</beans:bean>
	
	<context:component-scan base-package="com.journaldev.spring" />

	<tx:annotation-driven transaction-manager="transactionManager" />

	<beans:bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<beans:property name="sessionFactory"
			ref="hibernate4AnnotatedSessionFactory" />
	</beans:bean>

</beans:beans>
